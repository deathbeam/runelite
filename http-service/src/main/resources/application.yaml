datasource:
  runelite:
    driverClassName: com.mysql.jdbc.Driver
    type: com.mysql.jdbc.jdbc2.optional.MysqlDataSource
    url: jdbc:mysql://localhost:3306/runelite
    username: runelite
    password: runelite
  runelite-cache:
    driverClassName: com.mysql.jdbc.Driver
    type: com.mysql.jdbc.jdbc2.optional.MysqlDataSource
    url: jdbc:mysql://localhost:3306/runelite-cache2
    username: runelite
    password: runelite
  runelite-tracker:
    driverClassName: com.mysql.jdbc.Driver
    type: com.mysql.jdbc.jdbc2.optional.MysqlDataSource
    url: jdbc:mysql://localhost:3306/runelite-tracker
    username: runelite
    password: runelite

# By default Spring tries to register the datasource as an MXBean,
# so if multiple apis are deployed on one web container with
# shared datasource it tries to register it multiples times and
# fails when starting the 2nd api
spring.jmx.enabled: false

# Use 9080 port
server:
  port: 9080

# Google OAuth client
oauth:
  client-id:
  client-secret:
  callback: https://api.runelite.net/oauth/

# Minio client storage for cache
minio:
  endpoint: http://localhost:9000
  accesskey: AM54M27O4WZK65N6F8IP
  secretkey: /PZCxzmsJzwCHYlogcymuprniGCaaLUOET2n6yMP
  bucket: runelite

# Redis client for temporary data storage
redis:
  pool.size: 10
  host: http://localhost:6379

# Twitter client for feed
runelite:
  twitter:
    consumerkey:
    secretkey:
    listid: 968949795153948673